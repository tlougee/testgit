UN: tlougee
PW:  v%rbGjhg;4DBr^y[0we;rjgjgfhwuuwiuhef
tlougee@gmail.com
tlougee@transparent.com

*********************************************************************************
https://www.youtube.com/watch?v=DVRQoVRzMIY&ab_channel=TechWithTim

- Install Git on local system ( note Git Add wasn't working so Ihad to reinstall and uncheck new experimental monitoring on last installer screen to get Git to work )
- Configure Git with your username and email address:
       C:\Users\tlougee>git config --global user.name "tlougee"
       C:\Users\tlougee>git config --global user.email "tlougee@gmail.com"
- Make a new repo on your local system by just making a dir for it:
       C:\Users\tlougee\>mkdir projects\testgit
       CD \projects\testgit
-  Initialize the new Git repository using 'git init' command
       C:\Users\tlougee\>mkdir projects\testgit>git init
-Now you can run Git commands when in this repo
-Now you can add files to this repo and Git will be track them and any changes to them.
-Add files to the Git 'staging area' which are the files you want to add in the next commit
      C:\Users\tlougee\>mkdir projects\testgit>git add 'name of the file'
   Ex: C:\Users\tlougee\>mkdir projects\testgit>git add github.txt
   - Use >git status command to see what files are in the staging area waiting to be commited
-Commit the file(s)   C:\Users\tlougee\>mkdir projects\testgit>git commit -m "added github.txt"
    -m allows you to include a short message about the commit
    - >git add .  command lets you add all files to the staging area 
- to make a new branch type >git checkout -b nameofmynewbranch
  type >git checkout master to go back to the master branch
  when in new branch type >git merge master    to merge the changes in the master
  branch into your new branch to keep your new branch up to date with any changes made to the master 
  branch since you made the new branch

--- On Github make a new repository by clicking on the '+' sign in upper right hand corner and select
'New Repository' from the drop down then give it a name.
-Next copy the line:  "git remote add origin https://github.com/tlougee/testgit.git" This 'Adds a link to a remote repository.'  The identifier 'origin' is now mapped to this url 'https://github.com/tlougee/testgit.git' You don't have to name it 'origin'  Some people name it
'upstream' to indicate it is the repository on the upstream server, etc.
- Make sure you are in the local branch you want to push then issue this command:
   >git push -u origin master  - this tells git to push the branch you are on to the 'master' branch 
    of the repository that 'origin' is linked to.  The '-u' tells Git to remember these settings so 
    next time we want to push the changes up to Github we can just type >git push
    - refresh the github 'Code' tab to see the changes



 






















2b2be-7f544
f5fd4-31edc
f802e-f04d6
78ac2-40cc0
282f9-b9717
e6d7b-f6813
2f0a8-faa96
16d98-cdcf9
d8065-00bfd
9e98b-b33f2
e5af0-2fb38
5ae20-5fb86
dd267-05412
c7607-be280
58c1e-7ed89
32b82-e39e1


cbr600f3

access token for class:  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